// Code generated by mockery v2.46.3. DO NOT EDIT.

package v1

import mock "github.com/stretchr/testify/mock"

// isTypedData_Data is an autogenerated mock type for the isTypedData_Data type
type isTypedData_Data struct {
	mock.Mock
}

type isTypedData_Data_Expecter struct {
	mock *mock.Mock
}

func (_m *isTypedData_Data) EXPECT() *isTypedData_Data_Expecter {
	return &isTypedData_Data_Expecter{mock: &_m.Mock}
}

// isTypedData_Data provides a mock function with given fields:
func (_m *isTypedData_Data) isTypedData_Data() {
	_m.Called()
}

// isTypedData_Data_isTypedData_Data_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isTypedData_Data'
type isTypedData_Data_isTypedData_Data_Call struct {
	*mock.Call
}

// isTypedData_Data is a helper method to define mock.On call
func (_e *isTypedData_Data_Expecter) isTypedData_Data() *isTypedData_Data_isTypedData_Data_Call {
	return &isTypedData_Data_isTypedData_Data_Call{Call: _e.mock.On("isTypedData_Data")}
}

func (_c *isTypedData_Data_isTypedData_Data_Call) Run(run func()) *isTypedData_Data_isTypedData_Data_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isTypedData_Data_isTypedData_Data_Call) Return() *isTypedData_Data_isTypedData_Data_Call {
	_c.Call.Return()
	return _c
}

func (_c *isTypedData_Data_isTypedData_Data_Call) RunAndReturn(run func()) *isTypedData_Data_isTypedData_Data_Call {
	_c.Call.Return(run)
	return _c
}

// newIsTypedData_Data creates a new instance of isTypedData_Data. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsTypedData_Data(t interface {
	mock.TestingT
	Cleanup(func())
}) *isTypedData_Data {
	mock := &isTypedData_Data{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.46.3. DO NOT EDIT.

package server

import (
	mock "github.com/stretchr/testify/mock"

	models "github.com/itallix/gophkeeper/internal/server/models"
)

// Vault is an autogenerated mock type for the Vault type
type Vault struct {
	mock.Mock
}

type Vault_Expecter struct {
	mock *mock.Mock
}

func (_m *Vault) EXPECT() *Vault_Expecter {
	return &Vault_Expecter{mock: &_m.Mock}
}

// DeleteSecret provides a mock function with given fields: secret
func (_m *Vault) DeleteSecret(secret models.Secret) error {
	ret := _m.Called(secret)

	if len(ret) == 0 {
		panic("no return value specified for DeleteSecret")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Secret) error); ok {
		r0 = rf(secret)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Vault_DeleteSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteSecret'
type Vault_DeleteSecret_Call struct {
	*mock.Call
}

// DeleteSecret is a helper method to define mock.On call
//   - secret models.Secret
func (_e *Vault_Expecter) DeleteSecret(secret interface{}) *Vault_DeleteSecret_Call {
	return &Vault_DeleteSecret_Call{Call: _e.mock.On("DeleteSecret", secret)}
}

func (_c *Vault_DeleteSecret_Call) Run(run func(secret models.Secret)) *Vault_DeleteSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(models.Secret))
	})
	return _c
}

func (_c *Vault_DeleteSecret_Call) Return(_a0 error) *Vault_DeleteSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Vault_DeleteSecret_Call) RunAndReturn(run func(models.Secret) error) *Vault_DeleteSecret_Call {
	_c.Call.Return(run)
	return _c
}

// ListSecrets provides a mock function with given fields: secret
func (_m *Vault) ListSecrets(secret models.Secret) ([]string, error) {
	ret := _m.Called(secret)

	if len(ret) == 0 {
		panic("no return value specified for ListSecrets")
	}

	var r0 []string
	var r1 error
	if rf, ok := ret.Get(0).(func(models.Secret) ([]string, error)); ok {
		return rf(secret)
	}
	if rf, ok := ret.Get(0).(func(models.Secret) []string); ok {
		r0 = rf(secret)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	if rf, ok := ret.Get(1).(func(models.Secret) error); ok {
		r1 = rf(secret)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Vault_ListSecrets_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListSecrets'
type Vault_ListSecrets_Call struct {
	*mock.Call
}

// ListSecrets is a helper method to define mock.On call
//   - secret models.Secret
func (_e *Vault_Expecter) ListSecrets(secret interface{}) *Vault_ListSecrets_Call {
	return &Vault_ListSecrets_Call{Call: _e.mock.On("ListSecrets", secret)}
}

func (_c *Vault_ListSecrets_Call) Run(run func(secret models.Secret)) *Vault_ListSecrets_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(models.Secret))
	})
	return _c
}

func (_c *Vault_ListSecrets_Call) Return(_a0 []string, _a1 error) *Vault_ListSecrets_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *Vault_ListSecrets_Call) RunAndReturn(run func(models.Secret) ([]string, error)) *Vault_ListSecrets_Call {
	_c.Call.Return(run)
	return _c
}

// RetrieveSecret provides a mock function with given fields: secret
func (_m *Vault) RetrieveSecret(secret models.Secret) error {
	ret := _m.Called(secret)

	if len(ret) == 0 {
		panic("no return value specified for RetrieveSecret")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Secret) error); ok {
		r0 = rf(secret)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Vault_RetrieveSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RetrieveSecret'
type Vault_RetrieveSecret_Call struct {
	*mock.Call
}

// RetrieveSecret is a helper method to define mock.On call
//   - secret models.Secret
func (_e *Vault_Expecter) RetrieveSecret(secret interface{}) *Vault_RetrieveSecret_Call {
	return &Vault_RetrieveSecret_Call{Call: _e.mock.On("RetrieveSecret", secret)}
}

func (_c *Vault_RetrieveSecret_Call) Run(run func(secret models.Secret)) *Vault_RetrieveSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(models.Secret))
	})
	return _c
}

func (_c *Vault_RetrieveSecret_Call) Return(_a0 error) *Vault_RetrieveSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Vault_RetrieveSecret_Call) RunAndReturn(run func(models.Secret) error) *Vault_RetrieveSecret_Call {
	_c.Call.Return(run)
	return _c
}

// StoreSecret provides a mock function with given fields: secret
func (_m *Vault) StoreSecret(secret models.Secret) error {
	ret := _m.Called(secret)

	if len(ret) == 0 {
		panic("no return value specified for StoreSecret")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Secret) error); ok {
		r0 = rf(secret)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Vault_StoreSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'StoreSecret'
type Vault_StoreSecret_Call struct {
	*mock.Call
}

// StoreSecret is a helper method to define mock.On call
//   - secret models.Secret
func (_e *Vault_Expecter) StoreSecret(secret interface{}) *Vault_StoreSecret_Call {
	return &Vault_StoreSecret_Call{Call: _e.mock.On("StoreSecret", secret)}
}

func (_c *Vault_StoreSecret_Call) Run(run func(secret models.Secret)) *Vault_StoreSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(models.Secret))
	})
	return _c
}

func (_c *Vault_StoreSecret_Call) Return(_a0 error) *Vault_StoreSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Vault_StoreSecret_Call) RunAndReturn(run func(models.Secret) error) *Vault_StoreSecret_Call {
	_c.Call.Return(run)
	return _c
}

// NewVault creates a new instance of Vault. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVault(t interface {
	mock.TestingT
	Cleanup(func())
}) *Vault {
	mock := &Vault{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

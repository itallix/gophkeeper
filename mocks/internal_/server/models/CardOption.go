// Code generated by mockery v2.46.3. DO NOT EDIT.

package models

import (
	mock "github.com/stretchr/testify/mock"
	models "gophkeeper.com/internal/server/models"
)

// CardOption is an autogenerated mock type for the CardOption type
type CardOption struct {
	mock.Mock
}

type CardOption_Expecter struct {
	mock *mock.Mock
}

func (_m *CardOption) EXPECT() *CardOption_Expecter {
	return &CardOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *CardOption) Execute(_a0 *models.CardOptions) {
	_m.Called(_a0)
}

// CardOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type CardOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *models.CardOptions
func (_e *CardOption_Expecter) Execute(_a0 interface{}) *CardOption_Execute_Call {
	return &CardOption_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *CardOption_Execute_Call) Run(run func(_a0 *models.CardOptions)) *CardOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.CardOptions))
	})
	return _c
}

func (_c *CardOption_Execute_Call) Return() *CardOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *CardOption_Execute_Call) RunAndReturn(run func(*models.CardOptions)) *CardOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewCardOption creates a new instance of CardOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCardOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *CardOption {
	mock := &CardOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
